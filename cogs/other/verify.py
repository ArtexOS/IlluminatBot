import logging
import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Button, View, Modal, TextInput
import random

# --- –ö–û–ù–°–¢–ê–ù–¢–´ ---
MEMBER_ROLE_ID = 1405996768876822539 # ID —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã–¥–∞–≤–∞—Ç—å –ø–æ—Å–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

logger = logging.getLogger(__name__)

class VerificationModal(discord.ui.Modal):
    def __init__(self, correct_number: int):
        super().__init__(title="üîÆ –¢–∞–π–Ω—ã–π –∫–æ–¥ –ò–ª–ª—é–º–∏–Ω–∞—Ç–∞")
        self.correct_number = correct_number

        self.code_input = TextInput(
            label=f"–í–≤–µ–¥–∏—Ç–µ —Å–≤—è—â–µ–Ω–Ω—ã–π –∫–æ–¥: {self.correct_number}",
            placeholder="‚ú¶ 4-–∑–Ω–∞—á–Ω—ã–π —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥ ‚ú¶",
            style=discord.TextStyle.short,
            min_length=4,
            max_length=4,
            required=True,
        )
        self.add_item(self.code_input)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            user_input = self.code_input.value
            if not user_input.isdigit():
                await interaction.response.send_message("‚ùå –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä.", ephemeral=True)
                return

            if int(user_input) == self.correct_number:
                role = interaction.guild.get_role(MEMBER_ROLE_ID)
                if role:
                    await interaction.user.add_roles(role)
                    await interaction.response.send_message("‚ú® –í—ã –ø—Ä–∏–Ω—è—Ç—ã –≤ –û—Ä–¥–µ–Ω –ò–ª–ª—é–º–∏–Ω–∞—Ç–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å.", ephemeral=True)
                    logger.info(f"{interaction.user} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à—ë–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.")
                else:
                    await interaction.response.send_message("‚ö†Ô∏è –†–æ–ª—å —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–ª–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –í–µ—Ä—Ö–æ–≤–Ω—ã–º –°–≤–µ—Ç–æ—á–µ–º.", ephemeral=True)
                    logger.error(f"–†–æ–ª—å —Å ID {MEMBER_ROLE_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ.")
            else:
                await interaction.response.send_message("‚ùå –ö–æ–¥ –Ω–µ–≤–µ—Ä–µ–Ω. –¢–µ–Ω–∏ –Ω–µ –ø—É—Å—Ç—è—Ç –≤–∞—Å –≤–Ω—É—Ç—Ä—å.", ephemeral=True)
                logger.warning(f"{interaction.user} –≤–≤—ë–ª –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥: {user_input}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –º–æ–¥–∞–ª–∫–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}", exc_info=True)
            await interaction.response.send_message("‚ö° –ü—Ä–æ–∏–∑–æ—à–ª–∞ –º–∞–≥–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", ephemeral=True)


class VerifyView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–ù–∞—á–∞—Ç—å —Ä–∏—Ç—É–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏", style=discord.ButtonStyle.gray, emoji="üïØÔ∏è", custom_id="verify_button")
    async def verify_button(self, interaction: discord.Interaction, button: Button):
        try:
            verification_role = interaction.guild.get_role(MEMBER_ROLE_ID)
            if not verification_role:
                logger.error(f"–†–æ–ª—å –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å ID {MEMBER_ROLE_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                await interaction.response.send_message("‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∞–≥–∏–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –í–µ—Ä—Ö–æ–≤–Ω—ã–º –°–≤–µ—Ç–æ—á–µ–º.", ephemeral=True)
                return

            if verification_role in interaction.user.roles:
                await interaction.response.send_message("üîî –í—ã —É–∂–µ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω—ã –≤ –û—Ä–¥–µ–Ω –ò–ª–ª—é–º–∏–Ω–∞—Ç–∞!", ephemeral=True)
                return

            correct_number = random.randint(1000, 9999)
            modal = VerificationModal(correct_number)
            await interaction.response.send_modal(modal)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}", exc_info=True)
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ö° –ü—Ä–æ–∏–∑–æ—à–ª–∞ –º–∞–≥–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", ephemeral=True)


class Verify(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.bot.add_view(VerifyView())

    @app_commands.command(name="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é", description="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª.")
    @app_commands.default_permissions(administrator=True)
    async def send_verify_message(self, inter: discord.Interaction):
        embed = discord.Embed(
            description="üîê –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø—É—Ç–Ω–∏–∫. –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤—Ä–∞—Ç–∞ –û—Ä–¥–µ–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–∏—Ç—É–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–≤–µ—á—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–∞–π–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å.",
            color=0x393a41
        )
        embed.set_footer(text="–ï—Å–ª–∏ —Ç–µ–Ω–∏ –º–µ—à–∞—é—Ç –≤–∞–º –ø—Ä–æ–π—Ç–∏ —Ä–∏—Ç—É–∞–ª, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –í–µ—Ä—Ö–æ–≤–Ω–æ–º—É –°–≤–µ—Ç–æ—á—É.")

        try:
            file = discord.File("images/verify.png", filename="verification.png")
            embed.set_image(url="attachment://verification.png")
            await inter.channel.send(embed=embed, view=VerifyView(), file=file)
        except FileNotFoundError:
            logger.warning("–§–∞–π–ª images/verify.png –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
            await inter.channel.send(embed=embed, view=VerifyView())

        await inter.response.send_message("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.", ephemeral=True)
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {inter.channel.name} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {inter.user.name}.")


async def setup(bot: commands.Bot):
    await bot.add_cog(Verify(bot))