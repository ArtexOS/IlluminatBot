import discord
from discord import app_commands
from discord.ext import commands
import random
from datetime import datetime, timedelta
from typing import Literal

from database.economy.functions import Database
from database.economy.connection import create_tables
from database.economy.models import User

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
LOG_CHANNEL_ID = 1407290317069357057
ADMIN_ROLE_ID = 1399711308676595785
BANK_FEE = 0.02
BUSINESS_SELL_PERCENTAGE = 0.75
STARTING_BALANCE = 500

DAILY_REWARD_NAME = "–î–∞—Ä –∏–ª–ª—é–º–∏–Ω–∞—Ç–æ–≤"

# --- –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ö–£–õ–î–ê–£–ù–û–í ---
DAILY_COOLDOWN = timedelta(hours=24)
WORK_COOLDOWN = timedelta(hours=3)
STEAL_COOLDOWN = timedelta(hours=6)
COLLECT_COOLDOWN = timedelta(hours=3)


class Economy(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.db = Database()
        self.log_channel = None

    async def cog_load(self):
        await create_tables()
        self.log_channel = self.bot.get_channel(LOG_CHANNEL_ID)

    async def send_log(self, embed: discord.Embed):
        if self.log_channel:
            await self.log_channel.send(embed=embed)

    @app_commands.command(name="–±–∞–ª–∞–Ω—Å", description="üíé –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å.")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –±–∞–ª–∞–Ω—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    async def balance(self, inter: discord.Interaction, user: discord.Member = None):
        target_user = user or inter.user
        db_user = await self.db.get_user(target_user.id)
        if not db_user:
            db_user = User(user_id=target_user.id, cash=STARTING_BALANCE, bank=0)
        embed = discord.Embed(title=f"üí∞ –ë–∞–ª–∞–Ω—Å {target_user.display_name}", color=discord.Color.gold())
        embed.set_thumbnail(url=target_user.display_avatar.url)
        embed.add_field(name="üíµ –ù–∞–ª–∏—á–Ω—ã–µ", value=f"`{db_user.cash:,}` ü™ô", inline=True)
        embed.add_field(name="üè¶ –í –±–∞–Ω–∫–µ", value=f"`{db_user.bank:,}` ü™ô", inline=True)
        embed.add_field(name="üìä –í—Å–µ–≥–æ", value=f"`{db_user.total:,}` ü™ô", inline=False)
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="—Ç–æ–ø", description="üèÜ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
    async def top(self, inter: discord.Interaction):
        top_users_db = await self.db.get_top_users(10)
        embed = discord.Embed(title="üëë –ó–∞–ª —Å–ª–∞–≤—ã –±–æ–≥–∞—á–µ–π", description="–¢–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –æ–±—â–µ–º—É –±–∞–ª–∞–Ω—Å—É.", color=discord.Color.blurple())
        description = [f"`{i + 1}.` **{(self.bot.get_user(user_db.user_id) or f'ID: {user_db.user_id}').display_name}** ‚Äî `{user_db.total:,}` ü™ô" for i, user_db in enumerate(top_users_db)]
        embed.description = "\n".join(description) if description else "–ü–æ–∫–∞ —á—Ç–æ –∑–¥–µ—Å—å –ø—É—Å—Ç–æ..."
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="–µ–∂–µ–¥–Ω–µ–≤–∫–∞", description=f"üéÅ –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π {DAILY_REWARD_NAME}.")
    async def daily(self, inter: discord.Interaction):
        user = await self.db.get_user(inter.user.id)
        now = datetime.utcnow()
        if user and user.last_daily and now - user.last_daily < DAILY_COOLDOWN:
            remaining = (user.last_daily + DAILY_COOLDOWN) - now
            return await inter.response.send_message(f"‚è≥ {DAILY_REWARD_NAME} –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑: {str(remaining).split('.')[0]}.", ephemeral=True)

        reward = random.randint(1500, 3000)
        await self.db.update_balance(inter.user.id, cash_delta=reward)
        await self.db.update_cooldown(inter.user.id, 'last_daily')
        embed = discord.Embed(title=f"‚ú® {DAILY_REWARD_NAME}", description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞—Ä –≤ —Ä–∞–∑–º–µ—Ä–µ **{reward:,}** ü™ô!", color=discord.Color.green())
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞", color=discord.Color.blue())
        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=inter.user.mention, inline=False)
        log_embed.add_field(name="–°—É–º–º–∞", value=f"`{reward:,}` ü™ô", inline=False)
        await self.send_log(log_embed)

    @app_commands.command(name="—Ä–∞–±–æ—Ç–∞", description="üõ†Ô∏è –ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ –º–æ–Ω–µ—Ç.")
    async def work(self, inter: discord.Interaction):
        user = await self.db.get_user(inter.user.id)
        now = datetime.utcnow()
        if user and user.last_work and now - user.last_work < WORK_COOLDOWN:
            remaining = (user.last_work + WORK_COOLDOWN) - now
            return await inter.response.send_message(f"‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑: {str(remaining).split('.')[0]}.", ephemeral=True)

        earnings = random.randint(300, 800)
        await self.db.update_balance(inter.user.id, cash_delta=earnings)
        await self.db.update_cooldown(inter.user.id, 'last_work')
        embed = discord.Embed(title="üí™ –¢—è–∂–∫–∏–π —Ç—Ä—É–¥", description=f"–í—ã —É—Å–µ—Ä–¥–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ **{earnings:,}** ü™ô!", color=discord.Color.green())
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –†–∞–±–æ—Ç–∞", color=discord.Color.blue())
        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=inter.user.mention, inline=False)
        log_embed.add_field(name="–ó–∞—Ä–∞–±–æ—Ç–æ–∫", value=f"`{earnings:,}` ü™ô", inline=False)
        await self.send_log(log_embed)

    @app_commands.command(name="—É–∫—Ä–∞—Å—Ç—å", description="üé≠ –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–∫—Ä–∞—Å—Ç—å –º–æ–Ω–µ—Ç—ã —É –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    @app_commands.describe(–∂–µ—Ä—Ç–≤–∞="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å.")
    async def steal(self, inter: discord.Interaction, –∂–µ—Ä—Ç–≤–∞: discord.Member):
        user = await self.db.get_user(inter.user.id)
        now = datetime.utcnow()
        if user and user.last_steal and now - user.last_steal < STEAL_COOLDOWN:
            remaining = (user.last_steal + STEAL_COOLDOWN) - now
            return await inter.response.send_message(f"‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–æ—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑: {str(remaining).split('.')[0]}.", ephemeral=True)

        if –∂–µ—Ä—Ç–≤–∞.id == inter.user.id:
            return await inter.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
        if –∂–µ—Ä—Ç–≤–∞.bot:
            return await inter.response.send_message("–ë–æ—Ç—ã - –Ω–µ—Å–æ–∫—Ä—É—à–∏–º—ã–µ —Å–æ–∑–¥–∞–Ω–∏—è, –∏—Ö –Ω–µ –æ–≥—Ä–∞–±–∏—Ç—å.", ephemeral=True)

        victim_db = await self.db.get_user(–∂–µ—Ä—Ç–≤–∞.id)
        if not victim_db or victim_db.cash < 100:
            return await inter.response.send_message(f"–£ {–∂–µ—Ä—Ç–≤–∞.display_name} –ø–æ—á—Ç–∏ –Ω–µ—Ç –Ω–∞–ª–∏—á–Ω—ã—Ö, –∫—Ä–∞—Å—Ç—å –Ω–µ—á–µ–≥–æ.", ephemeral=True)

        await self.db.update_cooldown(inter.user.id, 'last_steal')
        success_chance = random.randint(10, 15)
        if random.randint(1, 100) <= success_chance:
            stolen_amount = int(victim_db.cash * 0.20)
            await self.db.update_balance(inter.user.id, cash_delta=stolen_amount)
            await self.db.update_balance(–∂–µ—Ä—Ç–≤–∞.id, cash_delta=-stolen_amount)
            embed = discord.Embed(title="‚úÖ –£–¥–∞—á–Ω–æ–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ", description=f"–í–∞–º —É–¥–∞–ª–æ—Å—å –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å **{stolen_amount:,}** ü™ô –∏–∑ –∫–∞—Ä–º–∞–Ω–æ–≤ {–∂–µ—Ä—Ç–≤–∞.mention}!", color=discord.Color.green())
            await inter.response.send_message(embed=embed)
            log_embed = discord.Embed(title="üìù –õ–æ–≥: –û–≥—Ä–∞–±–ª–µ–Ω–∏–µ (–£—Å–ø–µ—Ö)", color=0xf2ac52)
            log_embed.add_field(name="–í–æ—Ä", value=inter.user.mention).add_field(name="–ñ–µ—Ä—Ç–≤–∞", value=–∂–µ—Ä—Ç–≤–∞.mention).add_field(name="–£–∫—Ä–∞–¥–µ–Ω–æ", value=f"`{stolen_amount:,}` ü™ô")
            await self.send_log(log_embed)
        else:
            embed = discord.Embed(title="‚ùå –ü—Ä–æ–≤–∞–ª", description=f"{–∂–µ—Ä—Ç–≤–∞.mention} –∑–∞–º–µ—Ç–∏–ª(–∞) –≤–∞—Å! –í–∞–º –ø—Ä–∏—à–ª–æ—Å—å —Å–ø–µ—à–Ω–æ —Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø—É—Å—Ç—ã–º–∏ —Ä—É–∫–∞–º–∏.", color=discord.Color.red())
            await inter.response.send_message(embed=embed)
            log_embed = discord.Embed(title="üìù –õ–æ–≥: –û–≥—Ä–∞–±–ª–µ–Ω–∏–µ (–ü—Ä–æ–≤–∞–ª)", color=0x5c5c5c)
            log_embed.add_field(name="–í–æ—Ä", value=inter.user.mention).add_field(name="–ñ–µ—Ä—Ç–≤–∞", value=–∂–µ—Ä—Ç–≤–∞.mention)
            await self.send_log(log_embed)

    @app_commands.command(name="—Å–æ–±—Ä–∞—Ç—å_–ø—Ä–∏–±—ã–ª—å", description="üíº –°–æ–±—Ä–∞—Ç—å –¥–æ—Ö–æ–¥ —Å–æ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å–æ–≤.")
    async def collect_income(self, inter: discord.Interaction):
        user = await self.db.get_user(inter.user.id)
        now = datetime.utcnow()
        if user and user.last_collect and now - user.last_collect < COLLECT_COOLDOWN:
            remaining = (user.last_collect + COLLECT_COOLDOWN) - now
            return await inter.response.send_message(f"‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å –ø—Ä–∏–±—ã–ª—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑: {str(remaining).split('.')[0]}.", ephemeral=True)

        user_businesses = await self.db.get_user_businesses(inter.user.id)
        if not user_businesses:
            return await inter.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞ –ø—Ä–∏–±—ã–ª–∏.", ephemeral=True)

        total_income = sum(ub.business_info.income for ub in user_businesses)
        await self.db.update_balance(inter.user.id, cash_delta=total_income)
        await self.db.update_cooldown(inter.user.id, 'last_collect')
        embed = discord.Embed(title="ü§ë –ü—Ä–∏–±—ã–ª—å —Å–æ–±—Ä–∞–Ω–∞!", description=f"–í–∞—à–∏ –±–∏–∑–Ω–µ—Å—ã –ø—Ä–∏–Ω–µ—Å–ª–∏ –≤–∞–º –¥–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ **{total_income:,}** ü™ô.", color=discord.Color.green())
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –°–±–æ—Ä –ø—Ä–∏–±—ã–ª–∏", color=0x9b59b6)
        log_embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=inter.user.mention).add_field(name="–ü—Ä–∏–±—ã–ª—å", value=f"`{total_income:,}` ü™ô")
        await self.send_log(log_embed)

    @app_commands.command(name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏", description="üí∏ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    @app_commands.describe(–ø–æ–ª—É—á–∞—Ç–µ–ª—å="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏.", —Å—É–º–º–∞="–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞.")
    async def pay(self, inter: discord.Interaction, –ø–æ–ª—É—á–∞—Ç–µ–ª—å: discord.Member, —Å—É–º–º–∞: app_commands.Range[int, 1]):
        if –ø–æ–ª—É—á–∞—Ç–µ–ª—å.id == inter.user.id or –ø–æ–ª—É—á–∞—Ç–µ–ª—å.bot:
            return await inter.response.send_message("–ù–µ–≤–µ—Ä–Ω–∞—è —Ü–µ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.", ephemeral=True)
        sender_db = await self.db.get_user(inter.user.id)
        if not sender_db or sender_db.cash < —Å—É–º–º–∞:
            return await inter.response.send_message("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è —Ç–∞–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞.", ephemeral=True)
        await self.db.update_balance(inter.user.id, cash_delta=-—Å—É–º–º–∞)
        await self.db.update_balance(–ø–æ–ª—É—á–∞—Ç–µ–ª—å.id, cash_delta=—Å—É–º–º–∞)
        embed = discord.Embed(title="‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω", description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ **{—Å—É–º–º–∞:,}** ü™ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {–ø–æ–ª—É—á–∞—Ç–µ–ª—å.mention}.", color=discord.Color.green())
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ü–µ—Ä–µ–≤–æ–¥", color=discord.Color.light_grey())
        log_embed.add_field(name="–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", value=inter.user.mention).add_field(name="–ü–æ–ª—É—á–∞—Ç–µ–ª—å", value=–ø–æ–ª—É—á–∞—Ç–µ–ª—å.mention).add_field(name="–°—É–º–º–∞", value=f"`{—Å—É–º–º–∞:,}` ü™ô")
        await self.send_log(log_embed)

    @app_commands.command(name="–ø–æ–ª–æ–∂–∏—Ç—å", description="üì• –ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫ (–∫–æ–º–∏—Å—Å–∏—è 2%).")
    @app_commands.describe(—Å—É–º–º–∞="–°—É–º–º–∞ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è. –í–≤–µ–¥–∏—Ç–µ '–≤—Å–µ' —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –≤—Å—ë.")
    async def deposit(self, inter: discord.Interaction, —Å—É–º–º–∞: str):
        user_db = await self.db.get_user(inter.user.id)
        user_cash = user_db.cash if user_db else 0
        try: amount = int(—Å—É–º–º–∞) if —Å—É–º–º–∞.lower() != '–≤—Å–µ' else user_cash
        except ValueError: return await inter.response.send_message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ —Å–ª–æ–≤–æ '–≤—Å–µ'.", ephemeral=True)
        if amount <= 0: return await inter.response.send_message("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.", ephemeral=True)
        if user_cash < amount: return await inter.response.send_message("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö.", ephemeral=True)
        fee = int(amount * BANK_FEE)
        final_amount = amount - fee
        await self.db.update_balance(inter.user.id, cash_delta=-amount, bank_delta=final_amount)
        embed = discord.Embed(title="üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è", description=f"–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å—á–µ—Ç **{final_amount:,}** ü™ô.\n–ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–∏–ª–∞: `{fee:,}` ü™ô.", color=discord.Color.blue())
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="—Å–Ω—è—Ç—å", description="üì§ –°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞ (–∫–æ–º–∏—Å—Å–∏—è 2%).")
    @app_commands.describe(—Å—É–º–º–∞="–°—É–º–º–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è. –í–≤–µ–¥–∏—Ç–µ '–≤—Å–µ' —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –≤—Å—ë.")
    async def withdraw(self, inter: discord.Interaction, —Å—É–º–º–∞: str):
        user_db = await self.db.get_user(inter.user.id)
        user_bank = user_db.bank if user_db else 0
        try: amount = int(—Å—É–º–º–∞) if —Å—É–º–º–∞.lower() != '–≤—Å–µ' else user_bank
        except ValueError: return await inter.response.send_message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ —Å–ª–æ–≤–æ '–≤—Å–µ'.", ephemeral=True)
        if amount <= 0: return await inter.response.send_message("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.", ephemeral=True)
        if user_bank < amount: return await inter.response.send_message("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –±–∞–Ω–∫–µ.", ephemeral=True)
        fee = int(amount * BANK_FEE)
        final_amount = amount - fee
        await self.db.update_balance(inter.user.id, cash_delta=final_amount, bank_delta=-amount)
        embed = discord.Embed(title="üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è", description=f"–í—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á–µ—Ç–∞ **{final_amount:,}** ü™ô.\n–ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–∏–ª–∞: `{fee:,}` ü™ô.", color=discord.Color.blue())
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="–±–∏–∑–Ω–µ—Å", description="üè™ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏–∑–Ω–µ—Å–æ–≤.")
    async def business_list(self, inter: discord.Interaction):
        all_businesses = await self.db.get_all_businesses()
        embed = discord.Embed(title="üìà –ö–∞—Ç–∞–ª–æ–≥ –±–∏–∑–Ω–µ—Å–æ–≤", color=0x3498db)
        if not all_businesses:
            embed.description = "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏–∑–Ω–µ—Å–æ–≤. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ!"
        else:
            for business in all_businesses:
                owned_count = await self.db.count_owned_businesses(business.id)
                remaining = business.limit - owned_count
                embed.add_field(name=f"{business.name} (ID: {business.id})", value=f"**–¶–µ–Ω–∞:** `{business.price:,}` ü™ô\n**–î–æ—Ö–æ–¥:** `{business.income:,}` ü™ô\n**–û—Å—Ç–∞–ª–æ—Å—å:** `{remaining}/{business.limit}` —à—Ç.", inline=True)
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="–º–æ–∏_–±–∏–∑–Ω–µ—Å—ã", description="üè¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å–æ–≤.")
    async def my_businesses(self, inter: discord.Interaction):
        user_businesses = await self.db.get_user_businesses(inter.user.id)
        embed = discord.Embed(title=f"üè≠ –ë–∏–∑–Ω–µ—Å—ã {inter.user.display_name}", color=0xe67e22)
        if not user_businesses:
            embed.description = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –í—Ä–µ–º—è —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å!"
        else:
            total_income = sum(ub.business_info.income for ub in user_businesses)
            desc_lines = [f"‚Ä¢ **{ub.business_info.name}** (ID: `{ub.id}`) - –î–æ—Ö–æ–¥: `{ub.business_info.income:,}` ü™ô" for ub in user_businesses]
            embed.description = "\n".join(desc_lines)
            embed.set_footer(text=f"–û–±—â–∏–π –¥–æ—Ö–æ–¥ —Å –±–∏–∑–Ω–µ—Å–æ–≤: {total_income:,} ü™ô")
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="–±–∏–∑–∏–Ω—Ñ–æ", description="‚ÑπÔ∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ.")
    @app_commands.describe(id="ID –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /–º–æ–∏_–±–∏–∑–Ω–µ—Å—ã")
    async def business_info(self, inter: discord.Interaction, id: int):
        user_business = await self.db.get_user_business_by_id(id)
        if not user_business or user_business.user_id != inter.user.id:
            return await inter.response.send_message("üö´ –£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞ —Å —Ç–∞–∫–∏–º ID.", ephemeral=True)
        business_info = user_business.business_info
        sell_price = int(business_info.price * BUSINESS_SELL_PERCENTAGE)
        embed = discord.Embed(title=f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–∑–Ω–µ—Å–µ ¬´{business_info.name}¬ª", color=0x3498db)
        embed.add_field(name="üíµ –î–æ—Ö–æ–¥", value=f"`{business_info.income:,}` ü™ô", inline=True).add_field(name="üí∞ –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏", value=f"`{business_info.price:,}` ü™ô", inline=True).add_field(name="üìâ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏", value=f"`{sell_price:,}` ü™ô ({int(BUSINESS_SELL_PERCENTAGE * 100)}%)", inline=True)
        await inter.response.send_message(embed=embed)

    @app_commands.command(name="–∫—É–ø–∏—Ç—å_–±–∏–∑–Ω–µ—Å", description="üí∞ –ö—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å –ø–æ –µ–≥–æ ID.")
    @app_commands.describe(id="ID –±–∏–∑–Ω–µ—Å–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /–±–∏–∑–Ω–µ—Å")
    async def buy_business(self, inter: discord.Interaction, id: int):
        business = await self.db.get_business_by_id(id)
        if not business:
            return await inter.response.send_message("üö´ –ë–∏–∑–Ω–µ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
        user_db = await self.db.get_user(inter.user.id)
        user_cash = user_db.cash if user_db else 0
        if user_cash < business.price:
            return await inter.response.send_message("üí∏ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏.", ephemeral=True)
        owned_count = await self.db.count_owned_businesses(business.id)
        if owned_count >= business.limit:
            return await inter.response.send_message("üìâ –≠—Ç–æ—Ç —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ —É–∂–µ —Ä–∞—Å–ø—Ä–æ–¥–∞–Ω.", ephemeral=True)
        await self.db.update_balance(inter.user.id, cash_delta=-business.price)
        await self.db.purchase_business(inter.user.id, business.id)
        embed = discord.Embed(title="ü§ù –°–¥–µ–ª–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞!", description=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –±–∏–∑–Ω–µ—Å **¬´{business.name}¬ª** –∑–∞ `{business.price:,}` ü™ô.", color=discord.Color.green())
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ü–æ–∫—É–ø–∫–∞ –±–∏–∑–Ω–µ—Å–∞", color=0x2ecc71)
        log_embed.add_field(name="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å", value=inter.user.mention).add_field(name="–ë–∏–∑–Ω–µ—Å", value=business.name).add_field(name="–¶–µ–Ω–∞", value=f"`{business.price:,}` ü™ô")
        await self.send_log(log_embed)

    @app_commands.command(name="–ø—Ä–æ–¥–∞—Ç—å_–±–∏–∑–Ω–µ—Å", description="üìâ –ü—Ä–æ–¥–∞—Ç—å –≤–∞—à –±–∏–∑–Ω–µ—Å –ø–æ –µ–≥–æ ID.")
    @app_commands.describe(id="ID –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /–º–æ–∏_–±–∏–∑–Ω–µ—Å—ã")
    async def sell_business(self, inter: discord.Interaction, id: int):
        user_business = await self.db.get_user_business_by_id(id)
        if not user_business or user_business.user_id != inter.user.id:
            return await inter.response.send_message("üö´ –£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞ —Å —Ç–∞–∫–∏–º ID.", ephemeral=True)
        business_info = user_business.business_info
        sell_price = int(business_info.price * BUSINESS_SELL_PERCENTAGE)
        await self.db.sell_business(user_business.id)
        await self.db.update_balance(inter.user.id, cash_delta=sell_price)
        embed = discord.Embed(title="ü§ù –ë–∏–∑–Ω–µ—Å –ø—Ä–æ–¥–∞–Ω", description=f"–í—ã –ø—Ä–æ–¥–∞–ª–∏ **¬´{business_info.name}¬ª** –∏ –ø–æ–ª—É—á–∏–ª–∏ **{sell_price:,}** ü™ô.", color=0xe74c3c)
        await inter.response.send_message(embed=embed)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ü—Ä–æ–¥–∞–∂–∞ –±–∏–∑–Ω–µ—Å–∞", color=0xc27c0e)
        log_embed.add_field(name="–ü—Ä–æ–¥–∞–≤–µ—Ü", value=inter.user.mention).add_field(name="–ë–∏–∑–Ω–µ—Å", value=business_info.name).add_field(name="–í—ã—Ä—É—á–∫–∞", value=f"`{sell_price:,}` ü™ô")
        await self.send_log(log_embed)

    # ---------- –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã ----------

    @app_commands.command(name="–≤—ã–¥–∞—Ç—å_–¥–µ–Ω—å–≥–∏", description="üëë (–ê–¥–º–∏–Ω) –í—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    @app_commands.checks.has_role(ADMIN_ROLE_ID)
    @app_commands.describe(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å="–ö–æ–º—É –≤—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏.", —Å—É–º–º–∞="–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã–¥–∞—Ç—å.", –∫—É–¥–∞="–ö—É–¥–∞ –∑–∞—á–∏—Å–ª–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞: –Ω–∞ —Ä—É–∫–∏ –∏–ª–∏ –≤ –±–∞–Ω–∫.")
    async def give_money(self, inter: discord.Interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: discord.Member, —Å—É–º–º–∞: app_commands.Range[int, 1], –∫—É–¥–∞: Literal['–Ω–∞–ª–∏—á–Ω—ã–µ', '–±–∞–Ω–∫']):
        cash_delta = —Å—É–º–º–∞ if –∫—É–¥–∞ == '–Ω–∞–ª–∏—á–Ω—ã–µ' else 0
        bank_delta = —Å—É–º–º–∞ if –∫—É–¥–∞ == '–±–∞–Ω–∫' else 0
        await self.db.update_balance(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id, cash_delta=cash_delta, bank_delta=bank_delta)
        await inter.response.send_message(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ `{—Å—É–º–º–∞:,}` ü™ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} –Ω–∞ —Å—á–µ—Ç ¬´{–∫—É–¥–∞}¬ª.", ephemeral=True)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ê–¥–º–∏–Ω | –í—ã–¥–∞—á–∞ —Å—Ä–µ–¥—Å—Ç–≤", color=0x2ecc71)
        log_embed.add_field(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value=inter.user.mention).add_field(name="–ü–æ–ª—É—á–∞—Ç–µ–ª—å", value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention).add_field(name="–°—É–º–º–∞", value=f"`{—Å—É–º–º–∞:,}` ü™ô").add_field(name="–°—á–µ—Ç", value=–∫—É–¥–∞.capitalize())
        await self.send_log(log_embed)

    @app_commands.command(name="–æ—Ç–æ–±—Ä–∞—Ç—å_–¥–µ–Ω—å–≥–∏", description="üëë (–ê–¥–º–∏–Ω) –û—Ç–æ–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    @app_commands.checks.has_role(ADMIN_ROLE_ID)
    @app_commands.describe(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å="–£ –∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏.", —Å—É–º–º–∞="–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –æ—Ç–æ–±—Ä–∞—Ç—å.", –æ—Ç–∫—É–¥–∞="–û—Ç–∫—É–¥–∞ —Å–ø–∏—Å–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞: —Å –Ω–∞–ª–∏—á–Ω—ã—Ö –∏–ª–∏ –∏–∑ –±–∞–Ω–∫–∞.")
    async def take_money(self, inter: discord.Interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: discord.Member, —Å—É–º–º–∞: app_commands.Range[int, 1], –æ—Ç–∫—É–¥–∞: Literal['–Ω–∞–ª–∏—á–Ω—ã–µ', '–±–∞–Ω–∫']):
        user_db = await self.db.get_user(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)
        if –æ—Ç–∫—É–¥–∞ == '–Ω–∞–ª–∏—á–Ω—ã–µ':
            user_cash = user_db.cash if user_db else 0
            if user_cash < —Å—É–º–º–∞:
                return await inter.response.send_message(f"üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({user_cash:,} ü™ô).", ephemeral=True)
        if –æ—Ç–∫—É–¥–∞ == '–±–∞–Ω–∫':
            user_bank = user_db.bank if user_db else 0
            if user_bank < —Å—É–º–º–∞:
                return await inter.response.send_message(f"üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –±–∞–Ω–∫–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({user_bank:,} ü™ô).", ephemeral=True)
        cash_delta = -—Å—É–º–º–∞ if –æ—Ç–∫—É–¥–∞ == '–Ω–∞–ª–∏—á–Ω—ã–µ' else 0
        bank_delta = -—Å—É–º–º–∞ if –æ—Ç–∫—É–¥–∞ == '–±–∞–Ω–∫' else 0
        await self.db.update_balance(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id, cash_delta=cash_delta, bank_delta=bank_delta)
        await inter.response.send_message(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–ª–∏ `{—Å—É–º–º–∞:,}` ü™ô —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} —Å–æ —Å—á–µ—Ç–∞ ¬´{–æ—Ç–∫—É–¥–∞}¬ª.", ephemeral=True)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ê–¥–º–∏–Ω | –ò–∑—ä—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤", color=0xe74c3c)
        log_embed.add_field(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value=inter.user.mention).add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention).add_field(name="–°—É–º–º–∞", value=f"`{—Å—É–º–º–∞:,}` ü™ô").add_field(name="–°—á–µ—Ç", value=–æ—Ç–∫—É–¥–∞.capitalize())
        await self.send_log(log_embed)

    @app_commands.command(name="–¥–æ–±–∞–≤–∏—Ç—å_–±–∏–∑–Ω–µ—Å", description="üëë (–ê–¥–º–∏–Ω) –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ –≤ –º–∞–≥–∞–∑–∏–Ω.")
    @app_commands.checks.has_role(ADMIN_ROLE_ID)
    @app_commands.describe(–Ω–∞–∑–≤–∞–Ω–∏–µ="–ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ (–Ω–∞–ø—Ä., 'IT-—Å—Ç–∞—Ä—Ç–∞–ø')", —Ü–µ–Ω–∞="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏", –¥–æ—Ö–æ–¥="–ü—Ä–∏–±—ã–ª—å –∑–∞ –æ–¥–∏–Ω —Å–±–æ—Ä", –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ="–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —Ç–∞–∫–∏—Ö –±–∏–∑–Ω–µ—Å–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    async def add_business(self, inter: discord.Interaction, –Ω–∞–∑–≤–∞–Ω–∏–µ: str, —Ü–µ–Ω–∞: int, –¥–æ—Ö–æ–¥: int, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: int):
        success = await self.db.add_business(–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω–∞, –¥–æ—Ö–æ–¥, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
        if not success:
            return await inter.response.send_message(f"üö´ –ë–∏–∑–Ω–µ—Å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´{–Ω–∞–∑–≤–∞–Ω–∏–µ}¬ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", ephemeral=True)
        embed = discord.Embed(title="‚úÖ –ë–∏–∑–Ω–µ—Å –¥–æ–±–∞–≤–ª–µ–Ω", description=f"–ù–æ–≤—ã–π –±–∏–∑–Ω–µ—Å **¬´{–Ω–∞–∑–≤–∞–Ω–∏–µ}¬ª** —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω.", color=discord.Color.dark_green())
        await inter.response.send_message(embed=embed, ephemeral=True)
        log_embed = discord.Embed(title="üìù –õ–æ–≥: –ê–¥–º–∏–Ω | –î–æ–±–∞–≤–ª–µ–Ω –±–∏–∑–Ω–µ—Å", color=0x71368a)
        log_embed.add_field(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value=inter.user.mention).add_field(name="–ù–∞–∑–≤–∞–Ω–∏–µ", value=–Ω–∞–∑–≤–∞–Ω–∏–µ).add_field(name="–¶–µ–Ω–∞", value=f"`{—Ü–µ–Ω–∞:,}` ü™ô").add_field(name="–î–æ—Ö–æ–¥", value=f"`{–¥–æ—Ö–æ–¥:,}` ü™ô").add_field(name="–õ–∏–º–∏—Ç", value=str(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ))
        await self.send_log(log_embed)

    @app_commands.command(name="—É–¥–∞–ª–∏—Ç—å_–±–∏–∑–Ω–µ—Å", description="üëë (–ê–¥–º–∏–Ω) –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.")
    @app_commands.checks.has_role(ADMIN_ROLE_ID)
    @app_commands.describe(id="ID –±–∏–∑–Ω–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ–º–∞–Ω–¥—ã /–±–∏–∑–Ω–µ—Å")
    async def delete_business(self, inter: discord.Interaction, id: int):
        business = await self.db.get_business_by_id(id)
        business_name = business.name if business else f"ID: {id}"

        result = await self.db.delete_business_type(id)

        if result == 'not_found':
            return await inter.response.send_message(f"üö´ –ë–∏–∑–Ω–µ—Å —Å ID `{id}` –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

        if result == 'is_owned':
            return await inter.response.send_message(
                f"üö´ –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –±–∏–∑–Ω–µ—Å, —Ç–∞–∫ –∫–∞–∫ –∏–º —É–∂–µ –≤–ª–∞–¥–µ—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –°–Ω–∞—á–∞–ª–∞ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –µ–≥–æ –ø—Ä–æ–¥–∞—Ç—å.",
                ephemeral=True)

        if result == 'success':
            await inter.response.send_message(f"‚úÖ –ë–∏–∑–Ω–µ—Å ¬´{business_name}¬ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.",
                                              ephemeral=True)

            log_embed = discord.Embed(title="üìù –õ–æ–≥: –ê–¥–º–∏–Ω | –ë–∏–∑–Ω–µ—Å —É–¥–∞–ª–µ–Ω", color=0x992d22)
            log_embed.add_field(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value=inter.user.mention)
            log_embed.add_field(name="–£–¥–∞–ª–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å", value=business_name)
            await self.send_log(log_embed)

    @commands.Cog.listener()
    async def on_app_command_error(self, inter: discord.Interaction, error):
        if isinstance(error, app_commands.CommandOnCooldown):
            delta = timedelta(seconds=error.retry_after)
            await inter.response.send_message(f"‚è≥ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {str(delta).split('.')[0]}.", ephemeral=True)
        elif isinstance(error, app_commands.MissingRole):
            await inter.response.send_message("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        else:
            print(error)
            if not inter.response.is_done():
                await inter.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.", ephemeral=True)
            else:
                await inter.followup.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.", ephemeral=True)

async def setup(bot: commands.Bot):
    await bot.add_cog(Economy(bot))